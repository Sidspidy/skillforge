// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String     @id @default(uuid())
  email        String     @unique
  password     String
  name         String?
  refreshToken String?
  createdAt    DateTime   @default(now())
  Skill        Skill[]
  WeekPlan     WeekPlan[]
}

model SkillCategory {
  id     String  @id @default(uuid())
  name   String  @unique
  skills Skill[]
}

model Skill {
  id         String        @id @default(uuid())
  name       String
  level      SkillLevel
  notes      String?
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
  user       User          @relation(fields: [userId], references: [id])
  userId     String
  category   SkillCategory @relation(fields: [categoryId], references: [id])
  categoryId String
  Goal       Goal[]
}

model WeekPlan {
  id         String      @id @default(uuid())
  userId     String
  startDate  DateTime
  endDate    DateTime
  goals      Goal[]
  reflection Reflection?
  createdAt  DateTime    @default(now())

  user User @relation(fields: [userId], references: [id])
}

model Goal {
  id         String     @id @default(uuid())
  weekPlanId String
  title      String
  skillId    String
  skill      Skill      @relation(fields: [skillId], references: [id])
  status     GoalStatus @default(PENDING)
  notes      String?
  createdAt  DateTime   @default(now())

  weekPlan WeekPlan @relation(fields: [weekPlanId], references: [id])
}

model Reflection {
  id         String   @id @default(uuid())
  weekPlanId String   @unique
  summary    String
  challenges String
  wins       String
  ideas      String
  createdAt  DateTime @default(now())

  weekPlan WeekPlan @relation(fields: [weekPlanId], references: [id])
}

enum GoalStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

enum SkillLevel {
  BEGINNER
  INTERMEDIATE
  ADVANCED
}
